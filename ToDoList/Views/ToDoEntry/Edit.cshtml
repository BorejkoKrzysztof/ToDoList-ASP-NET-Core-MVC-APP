@using ToDoListCore.Enums
@inject ToDoListInfrastructure.Models.ProgressStatusFormatingService Format
@model ToDoListInfrastructure.Models.ViewModels.ToDoEntry.EditToDoEntryViewModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>


<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" name="ToDoListId" value="@ViewBag.ToDoListId"/>
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control my-text-input" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control my-text-input" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DueDate" class="control-label"></label>
                <input asp-for="DueDate" class="form-control my-text-input" />
                <span asp-validation-for="DueDate" class="text-danger"></span>
            </div>
            <br />
            <div style="display: flex">
                <div class="form-group">
                    <input type="submit" value="Edit" class="btn my-button-class" />
                </div>
                <div>
                    <a asp-controller="ToDoEntry" asp-action="Index" asp-route-Id="@ViewBag.ToDoListId" class="btn my-button-class" style="width: 130px">Back to List</a>
                </div>
            </div>
            <input type="hidden" asp-for="ToDoEntryId" value="@ViewBag.ToDoEntryId"/>
        </form>
    </div>
</div>
